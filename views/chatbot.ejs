<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ChwInk</title>
    <link rel="stylesheet" href="chwink.css">

</head>

<body>
    <%- include("partials/sb.ejs") %>
    <div class="bgimg">
    </div>
    <h2 style="margin-top: 7%; color: #000000;">CHAT WITH INNERINK</h2>
    <div id="chat-container">
        <div id="chat-messages"></div>
        <input type="text" id="user-input" placeholder="Type your message...">
        <button id="send-button">Send</button>
        <div id="user-response" class="user-message"></div>
        <div id="chatbot-response" class="chatbot-message"></div>
    </div>

    <script>
        const chatMessages = document.getElementById('chat-messages');
        const userInput = document.getElementById('user-input');
        const sendButton = document.getElementById('send-button');
        const chatbotResponse = document.getElementById('chatbot-response');

        // Function to display user message in the chat
        function displayUserMessage(message) {
            const userMessage = document.createElement('div');
            userMessage.textContent = message;
            userMessage.classList.add('user-message');
            chatMessages.appendChild(userMessage);
        }

        // Function to display chatbot response in the chat
        function displayChatbotResponse(response) {
            const chatbotMessage = document.createElement('div');
            chatbotMessage.textContent = response.message.result;
            chatbotMessage.classList.add('chatbot-message'); // Add class for styling
            chatMessages.appendChild(chatbotMessage);
        }

        // Function to handle sending user message to server
        async function sendMessage() {
            const message = userInput.value.trim();
            if (message === '') {
                return;
            }

            displayUserMessage(message); // Display user message in the chat

            try {
                const response = await fetch('/message', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message: message })
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();
                // console.log(data);
                // console.log(data.message);  
                const chatbotResponseText = data;
                console.log(chatbotResponseText.message.result);
                displayChatbotResponse(chatbotResponseText); // Display chatbot response in the chat
            } catch (error) {
                console.error('Error:', error);
            }

            userInput.value = ''; // Clear user input field after sending message
        }

        sendButton.addEventListener('click', sendMessage);

        userInput.addEventListener('keydown', (event) => {
            if (event.key === 'Enter') {
                event.preventDefault();
                sendMessage();
            }
        });
    </script>
</body>

</html>
